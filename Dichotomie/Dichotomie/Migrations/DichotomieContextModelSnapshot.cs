// <auto-generated />
using Dichotomie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Dichotomie.Migrations
{
    [DbContext(typeof(DichotomieContext))]
    partial class DichotomieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dichotomie.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Dichotomie.Models.Replie", b =>
                {
                    b.Property<int>("ReplieId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("MainContent")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("ModificationDate");

                    b.Property<int>("TopicFK");

                    b.Property<int?>("UserFK");

                    b.HasKey("ReplieId");

                    b.HasIndex("TopicFK");

                    b.HasIndex("UserFK");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("Dichotomie.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryFK");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("CurrencyUsed");

                    b.Property<string>("MainContent")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("ModificationDate");

                    b.Property<int>("Pin");

                    b.Property<float>("Rating");

                    b.Property<int>("State");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TradeSystem")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UserFK");

                    b.HasKey("TopicId");

                    b.HasIndex("CategoryFK");

                    b.HasIndex("UserFK");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Dichotomie.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Biography")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("DateJail");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<float>("Reputation");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dichotomie.Models.Replie", b =>
                {
                    b.HasOne("Dichotomie.Models.Topic", "Topic")
                        .WithMany("Replies")
                        .HasForeignKey("TopicFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dichotomie.Models.User", "User")
                        .WithMany("Replies")
                        .HasForeignKey("UserFK");
                });

            modelBuilder.Entity("Dichotomie.Models.Topic", b =>
                {
                    b.HasOne("Dichotomie.Models.Category", "Category")
                        .WithMany("Topics")
                        .HasForeignKey("CategoryFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dichotomie.Models.User", "User")
                        .WithMany("Topics")
                        .HasForeignKey("UserFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
